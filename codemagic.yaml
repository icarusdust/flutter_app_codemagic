workflows:
#
#  Android Build
#
  # test-android-development-workflow:
  #   name: Android Development Workflow
  #   max_build_duration: 40
  #   environment:
  #     vars:
  #       ENVIRONMENT_CHOICE: "dev" # Choices: qa/dev
  #     flutter: stable
  #     xcode: latest
  #     java: 1.8
  #   cache:
  #      cache_paths: 
  #        - $FLUTTER_ROOT/.pub-cache
  #   triggering:
  #     events:
  #       - push
  #     branch_patterns:
  #       - pattern: 'TMA-794*'
  #         include: true
  #         source: true
  #     cancel_previous_builds: false
  #   scripts:
  #     - name: Test Flutter
  #       script: |
  #         echo "Testing Flutter"
  #         #flutter test
  #       ignore_failure: true
  #     - name: Build Android
  #       script: |
  #         echo "Building for Android Target"
  #         currentVersion=`grep "^version:*" $FCI_BUILD_DIR/pubspec.yaml | cut -d'+' -f 1 | cut -d' ' -f 2`
  #         buildNumber=`grep "^version:*" $FCI_BUILD_DIR/pubspec.yaml | cut -d'+' -f 2`
  #         # echo flutter build appbundle --flavor ${ENVIRONMENT_CHOICE} --build-name=${currentVersion} --build-number=${buildNumber}
  #         flutter build appbundle --build-name=${currentVersion} --build-number=${buildNumber}
  #       ignore_failure: true
  #     - name: Show Build Artifacts
  #       script: |
  #         find . -name \*.aab -o -name \*.apk -print
  #       ignore_failure: true
  #     - name: 
  #       script: |
  #         flutter build apk --release 
  #     # - name: Publishing with Fastlane
  #     #   script: |
  #     #     (pwd ; cd ios ; fastlane android upload_to_google_play)
  #   artifacts: 
  #       - build/**/outputs/**/*.apk
  #       - build/**/outputs/**/*.aab
  #   publishing:
  #     email:
  #       recipients:
  #         - nihal@nevercode.io
  #       notify:
  #         success: true
  #         failure: false
#
# iOS Build
#            
  test-ios-development-workflow:            
    name: iOS Development Workflow
    instance_type: mac_pro
    max_build_duration: 40
    environment:
      #vars:
        #ENVIRONMENT_CHOICE: "dev" # Choices: qa/dev
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        # FASTLANE_PASSWORD: Encrypted()
        APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmc3bzRsS3Z2cVVuLUtOV0tFQUVsTTdSd1JXbXI1STFrb0R5dEs3a3ZmTDRETnc2SUJabjlEdnBLN2ZWYmM1eDRlUVdMSlZaN2VPVEZBQ2h0WFd0NjlNajBoekVJR3JtM2FTaWhQRWg5NjE1b1VCTFE1UFhLTWpLVlAwS1NDQ3pKZl8zS2Q=) # <-- Put your encrypted App Store Connect Issuer Id here
        APP_STORE_CONNECT_KEY_IDENTIFIER:  Encrypted(Z0FBQUFBQmc3bzQ2d2tDWlRCdEhZbzVhMXI4amVLRVVnbjFoQng0c3dYYXItYWRlYllCUkxUZ2NldmdRek51WU5xZXZZZnlRbkNwWl9kNDBHYkpsOTdmX1EySjdXVFdMM2c9PQ==) #<-- Put your encrypted App Store Connect Key Identifier here
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmc3bzVXVmM5eXNVUFdKZF9XemRkU1BQVWFieHBzRVRPSmc2WG1kUzhWc2d0MzB2a0l3TkxOZ25HcUo0SjRlS3pUSmgwbHRzUFo1UV9KTHZlRldVRWhGSHBlQTZSd01yRVljRWFBVmFwN21VUWxqc0VfeU03ZnM5eFJRc1hZTThUVFJWRFBCQmVleUQ0RjJjZUtMTnhJMFh5cktjdjRlWkx6QXE3dnhvRVc0U1dmZ21ibVhRTTU5Q3NZOElpenk5TGpmMFUxTFRtR3gtdVdMb2cwcV91ZXBXTkVVd0NlLUFTVjVYeUZtM0ZQRU05b0lDTHFGSU5nanFqN00yN015TU9xaEk0blVsd19fT084aDBhdW1DZFpvb0I3djZ3SXh6SGRRRmZiT2ltZHBrV3laQ1Ixdm4xakxZTlFneDVJdVY5bTlueENDTllFRGo2VDdYQTN4YWFTUzFFa2RTN1VaRDY0a1JBZ3J1Rm52dGp6Y0c5ck5MUFIycHBwNVdaQ0pzdjJ6YlR1QktfSzhkdDNnSGpQeDRZTzFCc1VST3BmTFNNNmZGQTE0RnNyYVJCTzJVQT0=) # <-- Put your encrypted App Store Connect Private Key here
        CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmc3bzdxa3g2ekNyRVVGY3dmd2lQWHd3MGpCS21Wbk84NjBXb1dUdGZXZ1IzV1lWUjc2X3J2SEZzeWlWYnJpVkpBd253ZkhRQzlRQkdzOFRSRTB2MmZobVNuNUFXSU0wcmdjWTNualFWbG9LWFJLczIyTVp1djV0NDVaOEg3TlQwdl9kOC1IdTROVGtaamtHaVVwd2EydkFIamE0QW9DcjU2UnFWZU1oRjU4TmRIcUdlMUNnSFdwRzgxYnplSnd6QzJNQl83NWt4TGpoY25FdFhFdDRTVi1keXZfd3VTZDM3blEzTXl6U2VGZVQwZnlGQnpsQUZ0aldnbE5heVdZQ2s1bWZvaDk1MVJjMXlLaHE2bkhEMENuT1dndjlPRXgtdnhlREt6UldSNE5ZaVVLdXF1eXRkaVpUNDkxMTg0Ymh2ajZ3MGYyMHRzM0pnd3RVNHQ1R1hEclNnN0p2bGlHOHRidWZGM1N4MnpXQWRlNm5Fd1lOREUwUV8tbjN1T3VEVWtRbHNFNEVBTXUxbXN3UnNlQzBXWk5pOXBXQzNFWm84MFpEcUFnYzgtbGY5ckdPUWZ6d0xObEx5SEgwbjFBT2xJWDVPYVYyVWdPbTMwcmNYZlhFSWc0X0FoY1BtRy1fcDVDRVlsdXNlQ1VmeXJ4YjlyMzk4WElqbFMtb3dzdVFPQzFtajFvX0hQSUxlTXJCT1NuNlZleDBGUDVORDE1eWhpcEg4bVVpNlB2WHlIeHZUWVNrZUl5VzQ0eFMyYTVreUNfcC1pZFNBUlFMaXYxVVBFTWptWWllM1M5UmFiVVhoYkRmMlZmN0JJWkppejl2SWRoV2Q3RS1VdHdNRzU1Q3VpN0d0Q2JTTjNVV29LMHZEMmk3RHo5OFhzMENBSkJNbU5tdm0xSU9sR24zYm50REZyZ2xrYi1FdUt5YWxkaTR1QlM3cUZBMjkwSkVOUzd1V1o5RFh1Y2xRZ3NsRldpMENIQmRfTDMwYXZHUWJpZHZBNVpwV1JpREJUQVNhZmVmeDZxU21nUmdNSjVBbS1PLTRfYy00NDlzbDRxT0RRX25Va3VQUVd6YzRMN05KTFctMVliTlQwSlFBNGpsZkROUkRQZE9zSEFNZkt5OWRWQUJ4WVdNejFYcUluTVpfTDBtb05aS0VlQ29Tc19QN1QtSlJRd0hab3pNLVJuZm5DZTY1WWdsRUtPSFZ1VVRzVFR5Y0FlSVhTUXVvZDJYd3RmYTF0dlVkQjUtZmd2VVdaN2t2cF9XOU1xdFNhUTY2YUxXU0pEVnZVam5sbFdnWFJjeDY3cHNneDZNLTFZdnV4Z0I2SWNzdHJIZnlJaFNZMDgzTTVPV0FtNS1PU3B4WGFZMnNDOENQWERpcXpNVWE3UTRvdDBXbGhmQ1pQWTc0UkFzNzZuNlhtNG1UTUJyV2x0V1JXa25qX29oMm5SQzBJc3FQRkNXS2VEN29jaERnV3BWUHd5clBNZGpPZmZ1cVZtTHVTMWtlODUwRGJnVm83ZmR0ampXMVZ3cWh2YnlWeWdpVFQwQTFWQ19leGtrM2c0WjhiVER3SmRTY3dZM0M4eWx4OXVIN0l3ejZaRWtQUGx4WVV6R1cteXFxLWNoMWJPQlFnVTFpUjlPX0hwczlhaFFhT2pUMnJmMTBieXRXX2pKQXhlQUVFeTVpYnJFb1Y5Yk9neXlzUWZlYzU0LUMybmR3dTJYOC0ybXVaZ2NSMnN3c3BGTWp5bGdFN3QxUHVOdDZCc29wcnp6RUpqV0dETDAyMVNkS3B3cV8xa0w4R0w2M0NCanBYbWZGUzlzWV9QemNwU3lYUVZCT3hES0RLTTBXaTFfZ2I2dzR4QVo3Ul9LQkhFM29XbzV3dkhmb1ZlSklaRXp4RTBBZHFnSVd0NDVER3NFOWxuTmlCUUN1bEVzN25iYnFWZm1yOWg4RTZGOW9PSTcxejFUTFUxeG5xa28zZkJwZ3NKTzlRX2djOEZ1QVBfaXdhMHoxQm5lM2pQZzFDaVdSYnpJUFRBbndOSGxaM01JcTJyQkUyWjRXTkxETmtxOU1VT0VvOXAwVlpZdzJnellKeHFOMVJPVllpT01sQWFmdTA3MzEwcWZJZUdOM25BWDJVQjhDQWRRNWQyQmZERFNYY1Y2OTVHOWxNc0RUYnNnTU9lbm9HbW9yNmRsSE56cnJNaE8xcFByRzBBcDhWLXhwc3I2MHg1QXZma1BUWjVCX0pGYmxDSExZWXZtbXg3U0h5Vkh4c3VzeWNvTUU5aFRNdjRvaWVzR0pXNVlhNDRUeXRWWk92VmltUXB1MW5QZmRUdm0tTjBOU00waFc4TkxIWjQ2RXdQSnRLOFBtMDJXNTJlOUY3TmlOUnpiWGExSFFsQ3ZibEgzQ0VmaXpTZTBpc3JRUkhlVmx4dnYxaXZVSzl3SEJYSzdRODFkNUczSGZ3a0U0OXFlMnItWVlPTFkyWTRBVlR3Z1JyS21pdTM3Q241VDZnSWFXMk1KWkE1VnJaTklHVDU0ZzVDNVhHNi1iOXFPUjRCU3RMYXBNVWZHdjk1MGJmdUdGa21PSVR5YUlhQk9vVlROSm13OHN5cmRWYVZBUm5OR3lmcnpDejgyRThmaDZKNHVEU0dCTmw2cGJleWdzcDJuSElFNU0tSzdEWVZ5anA2c1NTdXllYUZyQVZ3aGZsdFpVYlp1dTZmQkZaODU4YmM1LUJyWnN4dXBDdG1jQ2JtZ0dQSkxFb25JZVR1UWNacVBnT29QV3FndzFzanhRUU5HenNQVFZUeWR2OWhGY2UwdDhGdzFySGszd2ZSZ3Z3SFRsZ0FLUlZTMzlZRHdnZ2dpazVRM1RwSjV0LThoNG5td1JCWEE2MEVpNHQ3NXFFUlZFX3JJcVJsMDVBcnI1V2lEWDd2N2tTai1Ed1VqWktORUZ4S1VobkUwbVNUY3d5dm10R0VRRXY4YTRoT1l5M3czb1pORmdxeGNjRzJLdVZIQVh0a0hSa1NmR2Ita1h6WUdZbW52R05vWEMzTkRfbU9KNE9IMUJQT05ON08xOUJ6emVnRktOMWx1Mm53c3ZxQ3otdmRrLVlfWW1G) # <-- Put your encrypted Certificate Private Key here
        # APPLE_ID: Encrypted() # <-- Put your encrypted Apple Id email address here
        # APPLE_APP_SPECIFIC_PASSWORD: Encrypted() # <-- Put your encrypted App Specific password here
        BUNDLE_ID: "com.icaruscreens.app" # <-- Put your bundle id here
      flutter: stable
      xcode: latest
      cocoapods: default
      java: 1.8
    cache:
       cache_paths: 
         - $FLUTTER_ROOT/.pub-cache
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'TMA-794*'
          include: true
          source: true
      cancel_previous_builds: false
    scripts:
      - name: Test Flutter
        script: |
          echo "Testing Flutter"
          #flutter test
        ignore_failure: true
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
                    keychain initialize
      - name: Fetch signing files
        script: |
                    app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
        ignore_failure: true
      - name: Use system default keychain
        script: |
                    keychain add-certificates
        ignore_failure: true
      - name: Set up code signing settings on Xcode project
        script: |
                    xcode-project use-profiles
        ignore_failure: true
      - name: Get Flutter packages
        script: |
                    cd . && flutter packages pub get
        ignore_failure: true
      - name: Install pods
        script: |
          find . -name "Podfile" -execdir pod install \;
        ignore_failure: true
      - name: Build iOS
        # working_directory: ios
        script: |
          echo "Building for iOS Target"
          export buildNumber=`grep "^version:*" pubspec.yaml | cut -d'+' -f 2`
          export releaseVersion=`grep "^version:*" pubspec.yaml | cut -d' ' -f 2 | cut -d'+' -f 1`
          echo "releaseVersion is $releaseVersion"
          echo fastlane set_build_number
          cd ios && fastlane set_build_number ; cd ..
          echo "Starting flutter build ipa "
          flutter build ipa  --release --export-options-plist=ios/ExportOptions.plist
          find . -name '*.ipa' -print
        ignore_failure: true
      - name: Create Screenshots
        # working_directory: .
        script: |
          #echo "Trying to install iOS 12.1 simulators"
          #echo "" | xcversion simulators --install='iOS 12.1'
          #echo "Creating screenshots devices list:"
          #xcrun simctl list devices --json
          #echo "xcrun simctl list"
          #xcrun simctl list --json
          echo "Running emulators:"
          flutter emulator
          #IPHONE_11_PRO_MAX_DEVICE_ID=3F9C2301-6AD8-409F-B275-29316C7CAC55 IPAD_PRO_11_3RD_DEVICE_ID=503ED4B8-9480-401C-99CC-F37B5E9DEDEE IPAD_AIR_4TH_DEVICE_ID=AF693EA2-3CEE-406E-9FD3-2AEF7C7AE4E0 IPAD_PRO_129_4TH_DEVICE_ID=6A5B12D9-73FA-44A3-8BF3-02A84090D174 IPHONE_8_PLUS_DEVICE_ID=EFC4BF4B-75E7-4319-A2E7-D95F84BF0475 ./screenshots.sh

          IPHONE_11_PRO_MAX_DEVICE_ID=3F9C2301-6AD8-409F-B275-29316C7CAC55 ./screenshots.sh
          echo "Running emulators:"
          flutter emulator
        ignore_failure: true
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*
      - screenshots/*
      - ios/fastlane/metadata/*
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    # publishing:
    #   app_store_connect: # For iOS or macOS app
    #     api_key: $APP_STORE_CONNECT_PRIVATE_KEY     # Contents of the API key, can also reference environment variable such as $APP_STORE_CONNECT_PRIVATE_KEY
    #     key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER   # Alphanumeric value that identifies the API key, can also reference environment variable such as $APP_STORE_CONNECT_KEY_IDENTIFIER
    #     issuer_id: $APP_STORE_CONNECT_ISSUER_ID     # Alphanumeric value that identifies who created the API key, can also reference environment variable such as $APP_STORE_CONNECT_ISSUER_ID
    #     submit_to_testflight: true                  # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.
    #   scripts:
    #     - name: Upload screenshots
    #       script: |
    #             cd ios
    #             APP_STORE_CONNECT_API_KEY_KEY_ID=$APP_STORE_CONNECT_KEY_IDENTIFIER APP_STORE_CONNECT_API_KEY_ISSUER_ID=$APP_STORE_CONNECT_ISSUER_ID APP_STORE_CONNECT_API_KEY_KEY=$APP_STORE_CONNECT_PRIVATE_KEY FASTLANE_PASSWORD=${FASTLANE_PASSWORD} APP_VERSION=${releaseVersion} builNumber=${buildNumber} fastlane upload_screenshots
    #             FASTLANE_PASSWORD=${FASTLANE_PASSWORD} buildNumber=${buildNumber} APP_VERSION=${releaseVersion} fastlane upload_android_screenshots

